1.GoLang的应用场景：
    --区块链技术：即去中心话的分布式账本技术
    --服务器：支撑主站后台的流量（排序，推荐，搜索等），提供负载均衡
    ，缓存，容错，按条件分流，统计运行指标（qps，延迟）等功能
    --游戏：数据通讯，逻辑处理与数据通道
    --分布式与云计算领域：CDN内容分发网络及云推送服务
2.学习方法
    --先建立整体框架，然后深挖细节
    --在实际工作中，要培养用到什么，能够快速学习什么能力
    --软件编程是一门“做中学”的学科，不是学了再做，而是做了才会
    --学习软件编程时在琢磨别人怎么做，而不是我认为应该怎么做的过程
3.语言特点
    --既能达到静态编译语言的安全和性能，又能达到动态语言开发
    维护的高效率。
    --指针的使用：package Project
            //go语言的指针使用特点，*为指针符
            func testPtr(num *int){
            	*num = 20
            }
    --包的使用:GoLang文件必须对应着一个包（即腹父级路径，
    否则无法编译）
    --垃圾回收机制，内存自动回收，不需开发人员管理
    --天然并发（重要特点）
        （1）从语言层面支持并发，实现简单
        （2）goroutune，轻量级线程，可实现大并发处理，高效利用多核
        （3）基于CPS并发模型实现
    --吸收了管道通信机制
    --支持返回多个值：
    package main

    func getSumAndSub(n1 int, n2 int) (int, int) {
    	sum := n1 + n2
    	sub := n1 - n2
    	return sum, sub
    }
    --和Python一样，也有切片slice、延时执行defer等
