小数（浮点）类型：
    --基本介绍：用于存放小数和浮点数
    --分类：
        单精度float32   4字节   -3.402E38~3.402E38
        双精度float64   4字节   -1.798E308~1.798E308
    --说明
        1）关于浮点数在机器中存放形式的简单说明，浮点数=符号数+指数位+尾数位
        2）尾数部分可能丢失，造成精度损失
        package main

        import "fmt"

        func main() {
        	var price float64
        	price = 13.5
        	fmt.Printf("当前价格为：%f\n", price*2.0)
        	//单精度和双精度的差别
        	var num1 float32 = -132.0000901
        	var num2 float64 = -132.0000901
        	fmt.Println("num1=",num1,"num2=",num2)
        	//num1= -132.00009 num2= -132.0000901
        }
        说明float64的精度比float32的更加准确，
        这同时说明：当需要表达一个对于精确度要求很高的数时应选用float64
        3）浮点型的存储成为三部分，因此存储时也会丢失
浮点型使用细节
    1）Go语言中浮点类型有固定的范围和字段长度，不受操作系统影响
    2）默认的浮点数据类型是双精度float64
    3）浮点型常量有两种表示形式
        十进制形式：5.1 0.512（必须有小数点）
        科学计数法形式：5.1234e2 = 5.12*10的二次方，5.12E-2 = 5.12/10的2次方
    4）通常情况下，应该使用float64，因为它比float32更精确。[开发中，推荐使用float64]
